name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - python-version: "3.11"
            wait_sec: 0 # データベースへの操作が衝突してたまにテスト失敗するのを防ぎたい
          - python-version: "3.12"
            wait_sec: 1
          - python-version: "3.13"
            wait_sec: 2
    services:
      db-${{ matrix.python-version }}:
        image: neo4j:5.20
        env:
          NEO4J_AUTH: neo4j/passwordneo
        ports:
          - 7687:7687

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      # Poetry cache depends on OS, Python version and Poetry version.
      - name: Cache Poetry cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}
      - name: Cache Packages
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-local-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('.github/workflows/*.yml') }}
      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Test
        run: |
          sleep ${{ matrix.wait_sec }} * 5
          poetry run task test
        env:
          NEO4J_URL: bolt://neo4j:passwordneo@localhost:7687

      - name: Run linter
        run: poetry run task lint
